version: '2'
services:
  user-service:
    build: ./user-service
    hostname: localhost
    restart: always
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - STRIPE_KEY_LIVE=${STRIPE_KEY_LIVE}
      - STRIPE_KEY_TEST=${STRIPE_KEY_TEST}
      - PORT=8000
      - DB_STRING=${DB_STRING}
    ports:
      - "8000:8000"
    networks:
      - housingo

  scrapers:
    build: ./scrapers
    hostname: localhost
    restart: always
    depends_on:
      - notification-service
      - rabbit-mq
    networks:
      - housingo

  notification-service:
    build: ./notification-service
    hostname: localhost
    restart: always
    environment:
      - DB_STRING=${DB_STRING}
    depends_on:
      - rabbit-mq
    networks:
      - housingo

  payment-service:
    build: ./payment-service
    hostname: localhost
    restart: always
    environment:
      - DB_STRING=${DB_STRING}
      - JWT_SECRET=${JWT_SECRET}
      - STRIPE_KEY_LIVE=${STRIPE_KEY_LIVE}
      - STRIPE_KEY_TEST=${STRIPE_KEY_TEST}
      - PORT=8001
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
    ports:
      - "8001:8001"
    networks:
      - housingo

  rabbit-mq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - housingo

networks:
  housingo:
    external:
      name: housingo
